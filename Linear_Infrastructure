# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# Linear_Infrastructure.py
# Created on: 2015-09-11 14:01:41.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: Linear_Infrastructure <Input__Proposed_Linear_Feature_> <Road_Buffer_Size> <Input_Base_Feature> <Workspace> <Input_Excel_parameter> <Input_join_field> <Type_Excel_output_Join_Field> <Frequency_Field_s_> <Summary_Field_s_> <Excel_Report__Type_name_with__xls_ext_> <Hansen_GFC2014_treecover2000_40N_070E_tif> <Impact_Distance> 
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy

# Check out any necessary licenses
arcpy.CheckOutExtension("spatial")

# Script arguments
Input__Proposed_Linear_Feature_ = arcpy.GetParameterAsText(0)
if Input__Proposed_Linear_Feature_ == '#' or not Input__Proposed_Linear_Feature_:
    Input__Proposed_Linear_Feature_ = "C:\\Users\\tdonyoe\\Documents\\WWF\\Data\\TOOL.gdb\\Proposed_Road" # provide a default value if unspecified

Road_Buffer_Size = arcpy.GetParameterAsText(1)
if Road_Buffer_Size == '#' or not Road_Buffer_Size:
    Road_Buffer_Size = "10 Meters" # provide a default value if unspecified

Input_Base_Feature = arcpy.GetParameterAsText(2)
if Input_Base_Feature == '#' or not Input_Base_Feature:
    Input_Base_Feature = "C:\\Users\\tdonyoe\\Documents\\WWF\\Data\\TOOL.gdb\\LandUse_2014" # provide a default value if unspecified

Workspace = arcpy.GetParameterAsText(3)
if Workspace == '#' or not Workspace:
    Workspace = "C:\\Users\\tdonyoe\\Documents\\WWF\\Data\\Monday.gdb" # provide a default value if unspecified

Input_Excel_parameter = arcpy.GetParameterAsText(4)

Input_join_field = arcpy.GetParameterAsText(5)

Type_Excel_output_Join_Field = arcpy.GetParameterAsText(6)

Frequency_Field_s_ = arcpy.GetParameterAsText(7)

Summary_Field_s_ = arcpy.GetParameterAsText(8)

Excel_Report__Type_name_with__xls_ext_ = arcpy.GetParameterAsText(9)
if Excel_Report__Type_name_with__xls_ext_ == '#' or not Excel_Report__Type_name_with__xls_ext_:
    Excel_Report__Type_name_with__xls_ext_ = "%Workspace%\\report.xls" # provide a default value if unspecified

Hansen_GFC2014_treecover2000_40N_070E_tif = arcpy.GetParameterAsText(10)
if Hansen_GFC2014_treecover2000_40N_070E_tif == '#' or not Hansen_GFC2014_treecover2000_40N_070E_tif:
    Hansen_GFC2014_treecover2000_40N_070E_tif = "C:\\Users\\tdonyoe\\Documents\\WWF\\Hansen_Images\\TAL_TreeCover\\Hansen_GFC2014_treecover2000_40N_070E.tif" # provide a default value if unspecified

Impact_Distance = arcpy.GetParameterAsText(11)
if Impact_Distance == '#' or not Impact_Distance:
    Impact_Distance = "50 Kilometers" # provide a default value if unspecified

# Local variables:
Road_Buffer = Road_Buffer_Size
Landuse_Erase = Road_Buffer
Multi_single = Landuse_Erase
Multi_single__2_ = Multi_single
Multi_single_Statistics1 = Multi_single__2_
LandUse_2014_CopyFeatures_La = Multi_single_Statistics1
LandUse_Divided = LandUse_2014_CopyFeatures_La
LandUse_Divided__3_ = LandUse_Divided
LandUse_Divided__5_ = LandUse_Divided__3_
LandUse_Divided__4_ = LandUse_Divided__5_
LandUse_Divided__2_ = LandUse_Divided__4_
Proposed_Road_Identity_FInal_ = LandUse_Divided__2_
Proposed_Road_Identity1 = Proposed_Road_Identity_FInal_
Proposed_Road_Identity1_Mult3 = Proposed_Road_Identity1
Frequency_Summary = Proposed_Road_Identity1_Mult3
Proposed_Road_Identity1_Mult3__2_ = Proposed_Road_Identity1_Mult3
LandUse_2014_Layer__3_ = Road_Buffer
LandUse_2014_CopyFeatures = LandUse_2014_Layer__3_
Participating_Features = LandUse_2014_CopyFeatures
LandUse_2014_Layer = Input_Base_Feature
Impact_Buffer = Input__Proposed_Linear_Feature_
Extract_Raster = Impact_Buffer
Reclass_Raster = Extract_Raster
Reclass_Raster__2_ = Reclass_Raster
Reclass_Raster__5_ = Reclass_Raster__2_
Reclass_Raster__4_ = Reclass_Raster__5_
Reclass_Raster__6_ = Reclass_Raster__4_
ToolExcel_ExcelToTable = Input_Excel_parameter

# Process: Make Feature Layer
tempEnvironment0 = arcpy.env.scratchWorkspace
arcpy.env.scratchWorkspace = "%Workspace%"
tempEnvironment1 = arcpy.env.workspace
arcpy.env.workspace = "%Workspace%"
arcpy.MakeFeatureLayer_management(Input_Base_Feature, LandUse_2014_Layer, "", "", "OBJECTID OBJECTID VISIBLE NONE;Shape Shape VISIBLE NONE;Type Type VISIBLE NONE;Density_20 Density_20 VISIBLE NONE;Shape_Length Shape_Length VISIBLE NONE;Shape_Area Shape_Area VISIBLE NONE")
arcpy.env.scratchWorkspace = tempEnvironment0
arcpy.env.workspace = tempEnvironment1

# Process: Buffer
arcpy.Buffer_analysis(Input__Proposed_Linear_Feature_, Road_Buffer, Road_Buffer_Size, "FULL", "ROUND", "NONE", "")

# Process: Select Layer By Location
tempEnvironment0 = arcpy.env.scratchWorkspace
arcpy.env.scratchWorkspace = "C:\\Users\\tdonyoe\\Documents\\WWF\\Data\\ModelTest.gdb"
arcpy.SelectLayerByLocation_management(LandUse_2014_Layer, "INTERSECT", Road_Buffer, "", "NEW_SELECTION")
arcpy.env.scratchWorkspace = tempEnvironment0

# Process: Copy Features
arcpy.CopyFeatures_management(LandUse_2014_Layer__3_, LandUse_2014_CopyFeatures, "", "0", "0", "0")

# Process: Make Feature Layer (2)
arcpy.MakeFeatureLayer_management(LandUse_2014_CopyFeatures, Participating_Features, "", "", "OBJECTID OBJECTID VISIBLE NONE;Shape Shape VISIBLE NONE;Type Type VISIBLE NONE;Density_20 Density_20 VISIBLE NONE;Shape_Length Shape_Length VISIBLE NONE;Shape_Area Shape_Area VISIBLE NONE")

# Process: Erase
arcpy.Erase_analysis(LandUse_2014_Layer__3_, Road_Buffer, Landuse_Erase, "")

# Process: Multipart To Singlepart (2)
arcpy.MultipartToSinglepart_management(Landuse_Erase, Multi_single)

# Process: Add Geometry Attributes
arcpy.AddGeometryAttributes_management(Multi_single, "AREA;PERIMETER_LENGTH", "", "", "")

# Process: Summary Statistics
arcpy.Statistics_analysis(Multi_single__2_, Multi_single_Statistics1, "POLY_AREA MAX", "ORIG_FID")

# Process: Add Join
arcpy.AddJoin_management(Participating_Features, "OBJECTID", Multi_single_Statistics1, "ORIG_FID", "KEEP_ALL")

# Process: Copy Features (2)
arcpy.CopyFeatures_management(LandUse_2014_CopyFeatures_La, LandUse_Divided, "", "0", "0", "0")

# Process: Add Field
arcpy.AddField_management(LandUse_Divided, "Area_Rat", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Field
arcpy.CalculateField_management(LandUse_Divided__3_, "Area_Rat", "[Multi_single_Statistics1_MAX_POLY_AREA] / [Shape_Area]", "VB", "")

# Process: Add Field (2)
arcpy.AddField_management(LandUse_Divided__5_, "Risk_Frag", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Field (2)
arcpy.CalculateField_management(LandUse_Divided__4_, "Risk_Frag", "myFunction( !Area_Rat! )", "PYTHON", "def myFunction(inValue):\\n   if (inValue > .9):\\n     return \"Low\"\\n   else:\\n     if (inValue > .7):\\n       return \"Meduim\"\\n     else:\\n       if (inValue > .4):\\n         return \"High\"\\n       else:\\n         return \"Very High\"")

# Process: Identity (2)
arcpy.Identity_analysis(Input__Proposed_Linear_Feature_, LandUse_Divided__2_, Proposed_Road_Identity_FInal_, "ALL", "", "NO_RELATIONSHIPS")

# Process: Delete Field
arcpy.DeleteField_management(Proposed_Road_Identity_FInal_, "Multi_single_Statistics1_ORIG_FID;Multi_single_Statistics1_FREQUENCY")

# Process: Multipart To Singlepart (3)
arcpy.MultipartToSinglepart_management(Proposed_Road_Identity1, Proposed_Road_Identity1_Mult3)

# Process: Frequency
arcpy.Frequency_analysis(Proposed_Road_Identity1_Mult3, Frequency_Summary, Frequency_Field_s_, Summary_Field_s_)

# Process: Excel To Table
arcpy.ExcelToTable_conversion(Input_Excel_parameter, ToolExcel_ExcelToTable, "ToolExcel")

# Process: Join Field
arcpy.JoinField_management(Proposed_Road_Identity1_Mult3, Input_join_field, ToolExcel_ExcelToTable, Type_Excel_output_Join_Field, "")

# Process: Table To Excel
arcpy.TableToExcel_conversion(Proposed_Road_Identity1_Mult3__2_, Excel_Report__Type_name_with__xls_ext_, "NAME", "CODE")

# Process: Buffer (2)
arcpy.Buffer_analysis(Input__Proposed_Linear_Feature_, Impact_Buffer, Impact_Distance, "FULL", "ROUND", "NONE", "")

# Process: Extract by Mask (2)
arcpy.gp.ExtractByMask_sa(Hansen_GFC2014_treecover2000_40N_070E_tif, Impact_Buffer, Extract_Raster)

# Process: Reclassify (2)
arcpy.gp.Reclassify_sa(Extract_Raster, "VALUE", "0 30 0;30 100 1", Reclass_Raster, "DATA")

# Process: Add Field (3)
arcpy.AddField_management(Reclass_Raster, "Area_SQKM", "FLOAT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Field (3)
arcpy.CalculateField_management(Reclass_Raster__2_, "Area_SQKM", "[COUNT]*25/1000", "VB", "")

# Process: Add Field (4)
arcpy.AddField_management(Reclass_Raster__5_, "Land_Cover", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Field (4)
arcpy.CalculateField_management(Reclass_Raster__4_, "Land_Cover", "myFunction( !Value! )", "PYTHON", "def myFunction(inValue):\\n   if (inValue == 0):\\n      return \"Non Forest\"\\n   else:\\n      return \"Forest\"\\n    ")

